# -*- coding: utf-8 -*-
"""SEPIEnrollment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wcfQiDTvX6LtuKxQkBn1l4UbkBupEY6a
"""


# streamlit_enrollment_form.py
import streamlit as st
from fpdf import FPDF
from uuid import uuid4
from datetime import datetime
import os
import unicodedata
import random
import string

try:
    import qrcode
    QR_AVAILABLE = True
except ImportError:
    QR_AVAILABLE = False

# Styling for background and text color
st.markdown(
    """
    <style>
    .stApp::before {
        content: "";
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: url('SEPI LOGO.png');
        background-repeat: no-repeat;
        background-position: center;
        background-size: 300px;
        opacity: 0.5;
        z-index: -1;
    }
    h1, h3, label, .css-10trblm, .css-1kyxreq, .stTextInput label {
        color: #e91e63 !important;
    }
    </style>
    """,
    unsafe_allow_html=True
)

def safe_text(text):
    return unicodedata.normalize("NFKD", text).encode("latin-1", "ignore").decode("latin-1")

def generate_reference():
    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=10))

class StyledPDF(FPDF):
    def header(self):
        if os.path.exists("SEPI LOGO.png"):
            self.image("SEPI LOGO.png", x=10, y=8, w=25)
        self.set_font("Arial", "B", 12)
        self.cell(0, 8, safe_text("SCHOOL OF EVERLASTING PEARL, INC."), ln=True, align="C")
        self.set_font("Arial", "", 8)
        self.cell(0, 4, safe_text("#066 Sitio Suuga Village - Phase III, Marcos Highway, Mambugan, Antipolo City 1870"), ln=True, align="C")
        self.cell(0, 4, safe_text("Email: sepi402954@gmail.com | sepiregistrar@gmail.com"), ln=True, align="C")
        self.cell(0, 4, safe_text("DepEd School ID No.: 402954 | ESC School ID No.: 403694"), ln=True, align="C")
        self.cell(0, 4, safe_text("Government Recognition Nos.: K-042 s.2009 | E-041 s.2012 | 026 s.2011"), ln=True, align="C")
        self.ln(2)
        self.set_font("Arial", "B", 11)
        self.cell(0, 8, safe_text("ENROLLMENT FORM"), ln=True, align="C")
        self.ln(2)

    def section_title(self, title):
        self.set_font("Arial", "B", 12)
        self.set_fill_color(240, 240, 240)
        self.cell(0, 8, safe_text(title), ln=True, fill=True)
        y = self.get_y()
        self.line(10, y, 200, y)
        self.ln(2)

    def section_body(self, body):
        self.set_font("Arial", size=12)
        self.multi_cell(0, 6, safe_text(body))
        self.ln(1)

# Add form fields for separate name components
st.session_state.setdefault("given_name", "")
st.session_state.setdefault("middle_name", "")
st.session_state.setdefault("surname", "")

with st.form("enrollment_form"):
    st.header("A. Personal Data")
    st.session_state["given_name"] = st.text_input("Given Name", value=st.session_state["given_name"])
    st.session_state["middle_name"] = st.text_input("Middle Name (if applicable)", value=st.session_state["middle_name"])
    st.session_state["surname"] = st.text_input("Surname", value=st.session_state["surname"])
    birth_date = st.date_input("Birth Date (DD/MM/YYYY)", format="DD/MM/YYYY")
    birth_place = st.text_input("Birth Place")
    lrn = st.text_input("LRN")
    grade_level = st.text_input("Enrolling for Grade Level")
    address = st.text_input("Home Address")
    contact = st.text_input("Contact Details")
    previous_school = st.text_input("Previous School")

    st.header("B. Family Data")
    mother_name = st.text_input("Mother's Name")
    mother_age = st.text_input("Mother's Age")
    mother_nationality = st.text_input("Mother's Nationality")
    mother_religion = st.text_input("Mother's Religion")
    mother_contact = st.text_input("Mother's Contact")
    mother_education = st.text_input("Mother's Education")
    mother_employment = st.text_input("Mother's Employment")

    dad_name = st.text_input("Father's Name")
    dad_age = st.text_input("Father's Age")
    dad_nationality = st.text_input("Father's Nationality")
    dad_religion = st.text_input("Father's Religion")
    dad_contact = st.text_input("Father's Contact")
    dad_education = st.text_input("Father's Education")
    dad_employment = st.text_input("Father's Employment")

    marital_status = st.text_input("Marital Status")

    st.header("C. Guardian Information")
    guardian_name = st.text_input("Guardian Name")
    guardian_relation = st.text_input("Relationship to Student")
    guardian_address = st.text_input("Guardian Address")
    guardian_contact = st.text_input("Guardian Contact")

    submitted = st.form_submit_button("Generate PDF Preview")

if submitted:
    middle = st.session_state["middle_name"] if st.session_state["middle_name"] else "NA"
    full_name = f"{st.session_state['surname']}, {st.session_state['given_name']} {middle}"
    pdf = StyledPDF()
    pdf.add_page()
    pdf.section_title("A. Personal Data")
    pdf.section_body(f"Full Name: {full_name}\nBirth Date: {birth_date.strftime('%d/%m/%Y')}\nBirth Place: {birth_place}\nLRN: {lrn}\nGrade Level: {grade_level}\nAddress: {address}\nContact: {contact}\nPrevious School: {previous_school}")
    pdf.section_title("B. Family Data")
    pdf.section_body(f"Mother: {mother_name}, Age: {mother_age}, Nationality: {mother_nationality}, Religion: {mother_religion}\nContact: {mother_contact}, Education: {mother_education}, Employment: {mother_employment}\n\nFather: {dad_name}, Age: {dad_age}, Nationality: {dad_nationality}, Religion: {dad_religion}\nContact: {dad_contact}, Education: {dad_education}, Employment: {dad_employment}\n\nMarital Status: {marital_status}")
    pdf.section_title("C. Guardian Information")
    pdf.section_body(f"Guardian Name: {guardian_name}, Relationship: {guardian_relation}\nAddress: {guardian_address}\nContact: {guardian_contact}")
    pdf.section_title("Acknowledgement")
    pdf.section_body("""
I hereby certify that the information above is true and correct to the best of my knowledge.
I commit to comply with all school rules and institutional guidelines set forth by SEPI.

Signature over Printed Name of Parent/Guardian/Authorized Representative:

______________________________

Date/Time Submitted: {datetime.now().strftime('%Y-%m-%d %I:%M %p')}
""")
    pdf.section_title("Enrollment Requirements Checklist")
    pdf.set_font("Arial", size=12)
    pdf.cell(5, 6, "‚òê", border=0)
    pdf.cell(0, 6, safe_text("PSA Birth Certificate"), ln=True)
    pdf.cell(5, 6, "‚òê", border=0)
    pdf.cell(0, 6, safe_text("Authorization Letter (if applicable) with Valid ID"), ln=True)
    pdf.cell(5, 6, "‚òê", border=0)
    pdf.cell(0, 6, safe_text("Transfer Credentials (if applicable)"), ln=True)
    pdf.ln(4)

    filename = f"enrollment_{uuid4().hex}.pdf"
    pdf.output(filename)

    with open(filename, "rb") as f:
        st.download_button(label="üìÑ Download Preview PDF", data=f, file_name=filename, mime="application/pdf")