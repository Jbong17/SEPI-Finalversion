# -*- coding: utf-8 -*-
"""SEPIEnrollment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wcfQiDTvX6LtuKxQkBn1l4UbkBupEY6a
"""


# streamlit_enrollment_form.py
import streamlit as st
from fpdf import FPDF
from uuid import uuid4
from datetime import datetime
import os
import unicodedata
import random
import string

try:
    import qrcode
    QR_AVAILABLE = True
except ImportError:
    QR_AVAILABLE = False

# Styling for background and text color
st.markdown(
    """
    <style>
    .stApp::before {
        content: "";
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: url('SEPI LOGO.png');
        background-repeat: no-repeat;
        background-position: center;
        background-size: 300px;
        opacity: 0.5;
        z-index: -1;
    }
    h1, h3, label, .css-10trblm, .css-1kyxreq, .stTextInput label {
        color: #e91e63 !important;
    }
    </style>
    """,
    unsafe_allow_html=True
)

def safe_text(text):
    return unicodedata.normalize("NFKD", text).encode("latin-1", "ignore").decode("latin-1")

def generate_reference():
    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=10))

class StyledPDF(FPDF):
    def header(self):
        if os.path.exists("SEPI LOGO.png"):
            self.image("SEPI LOGO.png", x=10, y=8, w=25)
        self.set_font("Arial", "B", 12)
        self.cell(0, 8, safe_text("SCHOOL OF EVERLASTING PEARL, INC."), ln=True, align="C")
        self.set_font("Arial", "", 8)
        self.cell(0, 4, safe_text("#066 Sitio Suuga Village - Phase III, Marcos Highway, Mambugan, Antipolo City 1870"), ln=True, align="C")
        self.cell(0, 4, safe_text("Email: sepi402954@gmail.com | sepiregistrar@gmail.com"), ln=True, align="C")
        self.cell(0, 4, safe_text("DepEd School ID No.: 402954 | ESC School ID No.: 403694"), ln=True, align="C")
        self.cell(0, 4, safe_text("Government Recognition Nos.: K-042 s.2009 | E-041 s.2012 | 026 s.2011"), ln=True, align="C")
        self.ln(2)
        self.set_font("Arial", "B", 11)
        self.cell(0, 8, safe_text("ENROLLMENT FORM"), ln=True, align="C")
        self.ln(2)

    def section_title(self, title):
        self.set_font("Arial", "B", 12)
        self.set_fill_color(240, 240, 240)
        self.cell(0, 8, safe_text(title), ln=True, fill=True)
        y = self.get_y()
        self.line(10, y, 200, y)
        self.ln(2)

    def section_body(self, body):
        self.set_font("Arial", size=12)
        self.multi_cell(0, 6, safe_text(body))
        self.ln(1)

# Add form fields for separate name components
st.session_state.setdefault("given_name", "")
st.session_state.setdefault("middle_name", "")
st.session_state.setdefault("surname", "")

with st.form("name_form"):
    st.header("A. Personal Name Details")
    st.session_state["given_name"] = st.text_input("Given Name", value=st.session_state["given_name"])
    st.session_state["middle_name"] = st.text_input("Middle Name (if applicable)", value=st.session_state["middle_name"])
    st.session_state["surname"] = st.text_input("Surname", value=st.session_state["surname"])
    st.session_state["birth_date"] = st.date_input("Birth Date (DD/MM/YYYY)", format="DD/MM/YYYY")

    middle = st.session_state["middle_name"] if st.session_state["middle_name"] else "NA"
    full_name_display = f"{st.session_state['surname']}, {st.session_state['given_name']} {middle}"
    st.markdown(f"**Full Name (format: Surname, Given Name Middle Name):** {full_name_display}")

    submitted_name = st.form_submit_button("Save Name Details")

if submitted_name:
    st.success("Name details saved.")

    # Generate temporary PDF for preview
    preview_filename = f"preview_{uuid4().hex}.pdf"
    pdf = StyledPDF()
    pdf.add_page()
    pdf.section_title("Preview")
    pdf.section_body(f"Full Name: {full_name_display}\nBirth Date: {st.session_state['birth_date'].strftime('%d/%m/%Y')}")
    pdf.output(preview_filename)

    with open(preview_filename, "rb") as f:
        st.download_button(label="ðŸ“„ Download Preview PDF", data=f, file_name="preview_enrollment_form.pdf", mime="application/pdf")