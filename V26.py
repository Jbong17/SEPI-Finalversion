# -*- coding: utf-8 -*-
"""SEPIEnrollment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wcfQiDTvX6LtuKxQkBn1l4UbkBupEY6a
"""

# streamlit_enrollment_form.py
import streamlit as st
from fpdf import FPDF
from uuid import uuid4
from datetime import datetime
import os
import unicodedata
import random
import string

try:
    import qrcode
    QR_AVAILABLE = True
except ImportError:
    QR_AVAILABLE = False

st.markdown(
    """
    <style>
    .stApp::before {
        content: "";
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: url('SEPI LOGO.png');
        background-repeat: no-repeat;
        background-position: center;
        background-size: 300px;
        opacity: 0.5;
        z-index: -1;
    }
    h1, h3, label, .css-10trblm, .css-1kyxreq, .stTextInput label {
        color: #e91e63 !important;
    }
    </style>
    """,
    unsafe_allow_html=True
)

def safe_text(text):
    return unicodedata.normalize("NFKD", text).encode("latin-1", "ignore").decode("latin-1")

def generate_reference():
    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=10))

class StyledPDF(FPDF):
    def header(self):
        if os.path.exists("SEPI LOGO.png"):
            self.image("SEPI LOGO.png", x=10, y=8, w=25)
        self.set_font("Arial", "B", 12)
        self.cell(0, 8, safe_text("SCHOOL OF EVERLASTING PEARL, INC."), ln=True, align="C")
        self.set_font("Arial", "", 8)
        self.cell(0, 4, safe_text("#066 Sitio Suuga Village - Phase III, Marcos Highway, Mambugan, Antipolo City 1870"), ln=True, align="C")
        self.cell(0, 4, safe_text("Email: sepi402954@gmail.com | sepiregistrar@gmail.com"), ln=True, align="C")
        self.cell(0, 4, safe_text("DepEd School ID No.: 402954 | ESC School ID No.: 403694"), ln=True, align="C")
        self.cell(0, 4, safe_text("Government Recognition Nos.: K-042 s.2009 | E-041 s.2012 | 026 s.2011"), ln=True, align="C")
        self.ln(2)
        self.set_font("Arial", "B", 11)
        self.cell(0, 8, safe_text("ENROLLMENT FORM"), ln=True, align="C")
        self.ln(2)

    def section_title(self, title):
        self.set_font("Arial", "B", 12)
        self.set_fill_color(240, 240, 240)
        self.cell(0, 8, safe_text(title), ln=True, fill=True)
        y = self.get_y()
        self.line(10, y, 200, y)
        self.ln(2)

    def section_body(self, body):
        self.set_font("Arial", size=12)
        self.multi_cell(0, 6, safe_text(body))
        self.ln(1)

# Final PDF generator logic (skeleton - rest of form data should be collected in the app interface)
def generate_pdf(data):
    ref_number = generate_reference()
    surname = data['full_name'].split(',')[0].strip().upper() if data['full_name'] else "UNKNOWN"
    filename = f"SEPI_{surname}_{ref_number}.pdf"

    pdf = StyledPDF(orientation='P', unit='mm', format=(203, 330))
    pdf.add_page()
    pdf.set_font("Arial", "I", 8)
    pdf.cell(0, 5, safe_text(f"Reference No.: {ref_number}"), ln=True, align="R")

    pdf.section_title("A. Personal Data")
    pdf.section_body(f"""
Full Name: {data['full_name']}
Age: {data['age']}  |  Birth Date: {data['birth_date']}  |  Birth Place: {data['birth_place']}
LRN: {data['lrn']}  |  Grade Level: {data['grade_level']}
Address: {data['address']}  |  Contact: {data['contact']}
Previous School: {data['previous_school']}
""")

    pdf.section_title("B. Family Data")
    pdf.section_body(f"""
Mother: {data['mother_name']} | Age: {data['mother_age']} | Nationality: {data['mother_nationality']} | Religion: {data['mother_religion']}
Contact: {data['mother_contact']} | Education: {data['mother_education']} | Employment: {data['mother_employment']}

Father: {data['dad_name']} | Age: {data['dad_age']} | Nationality: {data['dad_nationality']} | Religion: {data['dad_religion']}
Contact: {data['dad_contact']} | Education: {data['dad_education']} | Employment: {data['dad_employment']}

Marital Status: {data['marital_status']}
""")

    pdf.section_title("C. Guardian Information")
    pdf.section_body(f"""
Name: {data['guardian_name']} | Relationship: {data['guardian_relation']}
Address: {data['guardian_address']} | Contact: {data['guardian_contact']}
""")

    pdf.section_title("Acknowledgement")
    pdf.section_body(f"""
I hereby certify that the information above is true and correct to the best of my knowledge.
I commit to comply with all school rules and institutional guidelines set forth by SEPI.

Signature over Printed Name of Parent/Guardian/Authorized Representative:

______________________________

Date/Time Submitted: {datetime.now().strftime('%Y-%m-%d %I:%M %p')}
""")

    pdf.section_title("Enrollment Requirements Checklist")
    pdf.set_font("Arial", size=12)
    pdf.cell(5, 6, safe_text("☐"), border=0)
    pdf.cell(0, 6, safe_text("PSA Birth Certificate"), ln=True)
    pdf.cell(5, 6, safe_text("☐"), border=0)
    pdf.cell(0, 6, safe_text("Authorization Letter (if applicable) with Valid ID"), ln=True)
    pdf.cell(5, 6, safe_text("☐"), border=0)
    pdf.cell(0, 6, safe_text("Transfer Credentials (if applicable)"), ln=True)
    pdf.ln(4)

    if QR_AVAILABLE and data['lrn']:
        qr = qrcode.make(data['lrn'])
        qr_path = f"qr_{uuid4().hex}.png"
        qr.save(qr_path)
        pdf.image(qr_path, x=170, y=pdf.get_y(), w=25)
        os.remove(qr_path)

    pdf.output(filename)
    return filename