# -*- coding: utf-8 -*-
"""SEPIEnrollment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wcfQiDTvX6LtuKxQkBn1l4UbkBupEY6a
"""


# streamlit_enrollment_form.py
import streamlit as st
from fpdf import FPDF
from uuid import uuid4
from datetime import datetime
import os
import unicodedata

try:
    import qrcode
    QR_AVAILABLE = True
except ImportError:
    QR_AVAILABLE = False

# Styling for background and text color
st.markdown(
    """
    <style>
    .stApp::before {
        content: "";
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: url('SEPI LOGO.png');
        background-repeat: no-repeat;
        background-position: center;
        background-size: 300px;
        opacity: 0.5;
        z-index: -1;
    }
    h1, h3, label, .css-10trblm, .css-1kyxreq, .stTextInput label {
        color: #e91e63 !important;
    }
    </style>
    """,
    unsafe_allow_html=True
)

def safe_text(text):
    return unicodedata.normalize("NFKD", text).encode("latin-1", "ignore").decode("latin-1")

# Educational dropdowns
education_levels = ["Elementary", "High School", "College Graduate", "Master's", "Doctorate", "Other"]
employment_types = ["Unemployed", "Self-employed", "Private Sector", "Public Sector", "Overseas", "Other"]
marital_options = ["Married", "Separated", "Widowed", "Single Parent", "Other"]

# Streamlit Form Interface
st.title("ðŸ“„ School of Everlasting Pearl, Inc Enrollment System")

with st.form("enrollment_form"):
    st.header("A. Personal Data")
    full_name = st.text_input("Full Name")
    age = st.text_input("Age")
    birth_date = st.text_input("Birth Date")
    birth_place = st.text_input("Birth Place")
    lrn = st.text_input("LRN (optional)")
    grade_level = st.text_input("Enrolling for Grade Level")
    address = st.text_input("Home Address")
    contact = st.text_input("Contact Details")
    previous_school = st.text_input("Previous School (optional)")

    st.header("B. Family Data")
    mother_name = st.text_input("Mother's Full Name")
    mother_age = st.text_input("Mother's Age")
    mother_nationality = st.text_input("Mother's Nationality")
    mother_religion = st.text_input("Mother's Religion")
    mother_contact = st.text_input("Mother's Contact Number")
    mother_education = st.selectbox("Mother's Highest Educational Attainment", education_levels)
    mother_employment = st.selectbox("Mother's Employment", employment_types)

    dad_name = st.text_input("Father's Full Name")
    dad_age = st.text_input("Father's Age")
    dad_nationality = st.text_input("Father's Nationality")
    dad_religion = st.text_input("Father's Religion")
    dad_contact = st.text_input("Father's Contact Number")
    dad_education = st.selectbox("Father's Highest Educational Attainment", education_levels)
    dad_employment = st.selectbox("Father's Employment", employment_types)

    marital_status = st.selectbox("Parents' Marital Status", marital_options)

    st.header("C. Guardian Information")
    guardian_name = st.text_input("Guardian Full Name")
    guardian_relation = st.text_input("Relationship to the Student")
    guardian_address = st.text_input("Guardian Address")
    guardian_contact = st.text_input("Guardian Contact Number")

    submitted = st.form_submit_button("Generate PDF")

if submitted:
    data = {
        'full_name': full_name, 'age': age, 'birth_date': birth_date, 'birth_place': birth_place,
        'lrn': lrn, 'grade_level': grade_level, 'address': address, 'contact': contact, 'previous_school': previous_school,
        'mother_name': mother_name, 'mother_age': mother_age, 'mother_nationality': mother_nationality, 'mother_religion': mother_religion,
        'mother_contact': mother_contact, 'mother_education': mother_education, 'mother_employment': mother_employment,
        'dad_name': dad_name, 'dad_age': dad_age, 'dad_nationality': dad_nationality, 'dad_religion': dad_religion,
        'dad_contact': dad_contact, 'dad_education': dad_education, 'dad_employment': dad_employment,
        'marital_status': marital_status, 'guardian_name': guardian_name, 'guardian_relation': guardian_relation,
        'guardian_address': guardian_address, 'guardian_contact': guardian_contact
    }
    filename = generate_pdf(data)
    with open(filename, "rb") as f:
        st.download_button(label="ðŸ“¥ Download Enrollment Form PDF", data=f, file_name=filename, mime="application/pdf")
